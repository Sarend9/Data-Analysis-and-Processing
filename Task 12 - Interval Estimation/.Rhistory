file <- "game.dat"
x5 <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
# 1) Посмотрим данные:
head(x5)
str(x5)
# 2) Для нормальной работы с данными следует избавиться от пропущенных строк (избавимся от NA):
x5 <- na.omit(x5)
# Задание:
# Для данного задания нужно использовать всего пару функций.
# Используем функцию: summary(lm(x5[[2]] ~ x5[[1]], data = x5))
summary(lm(x5[[2]] ~ x5[[1]], data = x5))
#
# 1) По данным оцените параметры линейной регрессионной модели зависимости уровня игрока от его опытности:
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    • β0 - свободный член, константа, или интерцепт — представляет собой значение Yi при Xi = 0;
#    • β1 - определяет угол наклона линии регрессии.
#
#    • b0 и b1 - случайные величины, зависящие от случайного члена в уравнении регресии.
#      Нас интересует насколько b0 и b1 близки к своим теоретическим значениями β0 и β1.
#
#      ОТВЕТ:
#      -----
#      В консоле смотрим на поле "Coefficients"
#      • intercept - свободный член, т.е. b0
#      • x[[5]]    - b1
#
#      В первом стобце "Estimate Std." и есть b0 и b1.
# 2) Укажите:
#    ¯¯¯¯¯¯¯
#    • стандартную ошибку остатков:
#
#      ОТВЕТ: смотри внизу строчку "Residual standard error"
#                                   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#
#    • Коэффициент детерминации R²:
#
#      ОТВЕТ: смотри внизу строчку "Multiple R-squared"
#                                   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
# 3) Укажите стандартные ошибки для оценок коэффициентов регрессии:
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    • SEb0
#    • SEb1
#
#      ОТВЕТ:
#      -----
#      В консоле смотрим на поле "Coefficients"
#
#      Во втором стобце "Std. Error." и есть SEb0 и SEb1
# 4) Вычислите доверительные интервалы для этих оценок:
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    90% CI:
confint(lm(x5[[2]] ~ x5[[1]], data = x5), level = 0.90)
#    Первая строка b0, вторая строка b1
#    95% CI:
confint(lm(x5[[2]] ~ x5[[1]], data = x5), level = 0.95)
# Вопрос 5:
# install.packages("ggplot2")
# library(ggplot2)
# 2) Повысим уровень доверия до 90% и заодно сделаем диаграмму ярче:
theme_set(theme_bw(base_size = 14))  # чёрно-белое оформление, базовый размер шрифта
theme_update(plot.title = element_text(face = 'bold', hjust = 0.5))  # жирный шрифт заголовка, выравнивание по центру
ggplot(x5) +
aes(y = x5[[2]], x = x5[[1]]) +
geom_point(col = 'blue', cex = 1.5) +
geom_smooth(method = 'lm', col = 'red', level = 0.9, fill = 'pink')+
labs(title = "Модель простой линейной регрессии с 90% доверительной полосой
по данным об игровом опыте респондента и о его уровне мастерства                     ",
y = 'уровень мастерства', x = 'игровой опыт')
# Вопрос 5: У двух случайно набранных групп, мужской и женской,
#           собраны данные об обуви, которая надета на участников:
#           кеды (1), кроссовки (2), ботинки (3), туфли(4). Данные
#           записаны в два файла: female.dat (женщины) и male.dat (мужчины).
# 1) Дано:
file <- "male.dat"
x5_1 <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
file <- "female.dat"
x5_2 <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
str(c(x5_1, x5_2))  #  вывод сведений о структуре объекта
P_true <- 1/4
# 2) Для использования функции chisq.test() преобразуем переменные:
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
x5_1$sex <- "male"
x5_2$sex <- "female"
names(x5_1)<- c("shoes", "sex")
names(x5_2)<- c("shoes", "sex")
x5 <- rbind(x5_1, x5_2)
x5.table <- table(x5)
print(chisq.test(x5.table))  # критерий согласия хи-квадрат Пирсона
p_value <- chisq.test(x5.table)[3]; p_value
fisher.test(x5.table) # точный критерий Фишера
cat("\n   • Критерий однородности χ2 Пирсона:", as.numeric(chisq.test(x5.table)[[1]]),      "\n")
cat(  "   • df (χ2 Пирсона):  ", as.numeric(chisq.test(x5.table)[[2]]),      "\n")
cat(  "   • p  (χ2 Пирсона):  ", as.numeric(chisq.test(x5.table)[[3]]), "\n")
cat(  "   • p  (Фишера):      ",  fisher.test(x5.table)[[1]], "\n")
if    (p_value < 0.05)
{cat("\nНулевая гипотеза H0 - \033[1mотвергается\033[0m\n")
cat("Результат оказался статистически \033[1mзначимым\033[0m\n")
cat("Таким образом, гипотеза о том, что ... \033[1mподтвертидась\033[0m\n")
} else
{cat("\nНулевая гипотеза H0 - \033[1mне отвергается\033[0m\n")
cat("Результат оказался статистически \033[1mне значимым\033[0m\n")
cat("Таким образом, гипотеза о том, что ... \033[1mне подтвертидась\033[0m\n")}
cat("\nОтносительные частоты\n")
cat("\nгруппа:", names(table(x5[[2]])[1]),"\n")
for (i in 1:nrow(table(x5[[1]]))){
(cat("группа:",i,"частота",(length(x5[[1]][x5[[1]]==i & x5[[2]]==names(table(x5[[2]])[1])])/nrow(x5)*100), "\n"))}
cat("\nгруппа:", names(table(x5[[2]])[2]),"\n")
for (i in 1:nrow(table(x5[[1]]))){
(cat("группа:",i,"частота",(length(x5[[1]][x5[[1]]==i & x5[[2]]==names(table(x5[[2]])[2])])/nrow(x5)*100), "\n"))}
# Вопрос 1: Участники исследования выполняли тестовое задание. При этом каждому
#           случайным образом доставался один из трёх вариантов задания. Вариант
#           задания и успешность его выполнения (в %) участником записаны в файле:
#           task.dat.
#
# 1) Дано:
file <- "task.dat"
x1   <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
str(x1)  #  вывод сведений о структуре объекта
#    Поскольку групп больше двух, для проверки
#    нулевой гипотезы H0:μ1=μ2=μ3 применяется дисперсионный анализ.
# 2) Проверьте гипотезу о зависимости успешности выполнения от варианта задания.
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    Сравнение средних нескольких групп выполняется посредством "дисперсионного анализа".
#    Для этого используем функцию aov (analysis of variance) аналогична функции lm() в регрессионном анализе.
#    2.1) Её первый аргумент — зависимая переменная, а второй, после ~ — фактор.
#         Второй аргумент должен быть номинальным, т.е. в факторном либо текстовом формате, а не в числовом,
#         иначе aov() вместо ANOVA будет строить регрессионную модель.
#         Переводим второй аргумент в факторный формат:
x1[ , 1] <- factor(x1[ , 1])
#    2.2) Затем, чтобы получить сводку по модели, к результату применяем summary()
summary(aov(x1[[2]] ~ x1[[1]], data = x1))  # зависимость результата от варианта
df1     <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[1]][1]; df1
df2     <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[1]][2]; df2
F       <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[4]][1]; F
p.value <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[5]][1]; p.value
#    2.3)  Помимо проверки достоверности различий средних нам
#          нужно определить относительную величину этих
#          различий, то есть размер эффекта. Функция aov() не
#          вычисляет η2 , но его легко посчитать самим по формулам:
SSeffect   <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[2]][1]
SSresidual <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[2]][2]
η2 <- SSeffect / (SSeffect + SSresidual); η2
# 3) Выясните, какие варианты задания достоверно различаются по успешности выполнения.
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    Введите скорректированные p-значения
#
#    Для вычислений скорректированных p-значений
#    попарных сравнений всех групп используем команду:
pairwise.t.test(x1[[2]], g = x1[[1]])  # множественные сравнения с помощью t-критериев (с поправкой Хольма)
#    Аргумент g = функции pairwise.t.test() задаёт группирующую переменную, т.е.
#    фактор, по уровням которого наблюдения делятся на группы. По умолчанию вычисляется поправка Хольма.
# 4) Укажите средние и доверительные интервалы для успешности выполнения вариантов*:
print("Доверительные интервалы:")
DF <- data.frame()
for (i in 1:length(table(x1[[1]]))){
DF[i,1]  <- t.test(x1[[2]][x1[[1]]             == i] , conf.level = 0.9) [[5]][[1]]
DF[i,2]  <- paste0(attr(t.test(x1[[2]][x1[[1]] == i] , conf.level = 0.9) [[4]], "conf.level")*100, "%")
DF[i,3]  <- t.test(x1[[2]][x1[[1]]             == i] , conf.level = 0.9) [[4]][[1]]
DF[i,4]  <- "—"
DF[i,5]  <-  t.test(x1[[2]][x1[[1]]  == i] , conf.level = 0.9) [[4]][[2]]}
names(DF) <- c("варианты x", "CI", " ", " ", " ")
DF
# или моя функция:
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Функции для R/R_test_func2.R")
Static_output(x1, CL_n_group = 90, CL_n = 90)
# 5) Интепретация:
#    Функция   Anova.disp() может выдать уже интерпетацию по ANOVA:
Anova.disp(x1)
#
# С помощью доверительных интервалов CI определили диапазоны успешности выполнения каждого варианта, в которых с CL= 90%-ой вероятностью заключены параметры генеральной совокупности.
# Выборочные стандартные успешности выполнения задания каждого варианта составили соответственно 69.575%, 67.985 и 73.050%.
# Для проверки гипотезы о зависимости успешности выполнения от варианта задания, использовался однофакторный дисперсионный анализ.
# Результат оказался статистически значимым: F(2,57) = 1.597 , p = 0.211.
# Попарные пост-хок сравнения при помощи t-критериев (с поправкой Хольма). показали достоверные различия между вариантами 1 и 2 (p = 0.47), 2 и 3 (p = 0.26).
# Таким образом, гипотеза о зависимости успешности выполнения от варианта задания подтвердилась.
# Обнаружен слабый эффект зависимости разницы между вариантами и успешностью выполнения (η2 = 0.053). Статистически достоверна успешность от варианта задания лишь при 1 и 3 варианте и при 2 и 3.
#
# или моя функция:
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Функции для R/R_test_func2.R")
# Вопрос 1: Участники исследования выполняли тестовое задание. При этом каждому
#           случайным образом доставался один из трёх вариантов задания. Вариант
#           задания и успешность его выполнения (в %) участником записаны в файле:
#           task.dat.
#
# 1) Дано:
file <- "task.dat"
x1   <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
str(x1)  #  вывод сведений о структуре объекта
#    Поскольку групп больше двух, для проверки
#    нулевой гипотезы H0:μ1=μ2=μ3 применяется дисперсионный анализ.
# 2) Проверьте гипотезу о зависимости успешности выполнения от варианта задания.
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    Сравнение средних нескольких групп выполняется посредством "дисперсионного анализа".
#    Для этого используем функцию aov (analysis of variance) аналогична функции lm() в регрессионном анализе.
#    2.1) Её первый аргумент — зависимая переменная, а второй, после ~ — фактор.
#         Второй аргумент должен быть номинальным, т.е. в факторном либо текстовом формате, а не в числовом,
#         иначе aov() вместо ANOVA будет строить регрессионную модель.
#         Переводим второй аргумент в факторный формат:
x1[ , 1] <- factor(x1[ , 1])
#    2.2) Затем, чтобы получить сводку по модели, к результату применяем summary()
summary(aov(x1[[2]] ~ x1[[1]], data = x1))  # зависимость результата от варианта
df1     <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[1]][1]; df1
df2     <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[1]][2]; df2
F       <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[4]][1]; F
p.value <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[5]][1]; p.value
#    2.3)  Помимо проверки достоверности различий средних нам
#          нужно определить относительную величину этих
#          различий, то есть размер эффекта. Функция aov() не
#          вычисляет η2 , но его легко посчитать самим по формулам:
SSeffect   <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[2]][1]
SSresidual <- (summary(aov(x1[[2]] ~ x1[[1]], data = x1))[[1]])[[2]][2]
η2 <- SSeffect / (SSeffect + SSresidual); η2
# 3) Выясните, какие варианты задания достоверно различаются по успешности выполнения.
#    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#    Введите скорректированные p-значения
#
#    Для вычислений скорректированных p-значений
#    попарных сравнений всех групп используем команду:
pairwise.t.test(x1[[2]], g = x1[[1]])  # множественные сравнения с помощью t-критериев (с поправкой Хольма)
#    Аргумент g = функции pairwise.t.test() задаёт группирующую переменную, т.е.
#    фактор, по уровням которого наблюдения делятся на группы. По умолчанию вычисляется поправка Хольма.
# 4) Укажите средние и доверительные интервалы для успешности выполнения вариантов*:
print("Доверительные интервалы:")
DF <- data.frame()
for (i in 1:length(table(x1[[1]]))){
DF[i,1]  <- t.test(x1[[2]][x1[[1]]             == i] , conf.level = 0.9) [[5]][[1]]
DF[i,2]  <- paste0(attr(t.test(x1[[2]][x1[[1]] == i] , conf.level = 0.9) [[4]], "conf.level")*100, "%")
DF[i,3]  <- t.test(x1[[2]][x1[[1]]             == i] , conf.level = 0.9) [[4]][[1]]
DF[i,4]  <- "—"
DF[i,5]  <-  t.test(x1[[2]][x1[[1]]  == i] , conf.level = 0.9) [[4]][[2]]}
names(DF) <- c("варианты x", "CI", " ", " ", " ")
DF
# или моя функция:
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
Static_output(x1, CL_n_group = 90, CL_n = 90)
# 5) Интепретация:
#    Функция   Anova.disp() может выдать уже интерпетацию по ANOVA:
Anova.disp(x1)
#
# С помощью доверительных интервалов CI определили диапазоны успешности выполнения каждого варианта, в которых с CL= 90%-ой вероятностью заключены параметры генеральной совокупности.
# Выборочные стандартные успешности выполнения задания каждого варианта составили соответственно 69.575%, 67.985 и 73.050%.
# Для проверки гипотезы о зависимости успешности выполнения от варианта задания, использовался однофакторный дисперсионный анализ.
# Результат оказался статистически значимым: F(2,57) = 1.597 , p = 0.211.
# Попарные пост-хок сравнения при помощи t-критериев (с поправкой Хольма). показали достоверные различия между вариантами 1 и 2 (p = 0.47), 2 и 3 (p = 0.26).
# Таким образом, гипотеза о зависимости успешности выполнения от варианта задания подтвердилась.
# Обнаружен слабый эффект зависимости разницы между вариантами и успешностью выполнения (η2 = 0.053). Статистически достоверна успешность от варианта задания лишь при 1 и 3 варианте и при 2 и 3.
#
# Меры изменчивости (разброса, рассеяния)
# дисперсия совокупности σ2:
x.var <- sum((x - mean(x)) ^ 2)/length(x)
# стандартное отклонение совокупности σ:
x.sd  <- sqrt(x.var)
# дисперсия выборки s2:
x.var <- var(x)
# стандартное отклонение выборки:
x.sd  <- sd(x)
# межквартильный размах IQR:
x.IQR <- IQR(x)
# Меры форм
install.packages("moments"); library(moments)
# коэффициент асимметрии γ1:
x.skew    <- skewness(x)           # или x.skew    <- sum((x - mean(x)) ^ 3)/(length(x)*(sqrt(x.var))^3)
# коэффициент эксцесса   γ2:
x.excess <- kurtosis(x)-3          # или x.excess  <- sum((x - mean(x)) ^ 4)/(length(x)*(sqrt(x.var))^4)-3
# Виды шкал:
# 1) Процентили (шкала по 1%)
quantile(imported.data$distance, probs=seq(0, 1, by=0.01))
# 2) Децили     (шкала по 10%)
quantile(imported.data$distance, probs=seq(0, 1, by=0.1))
# 3) Квартили   (шкала поделена на четверти)
quantile(imported.data$distance, probs=seq(0, 1, by=1/4))
# Нормальное распределение:
F.x <- 1/(x.sd*sqrt(2*pi))*exp(-((x-mean(x))^2)/(2*x.sd^2))
# или
F.x <- dnorm(x, mean = mean(x), sd = x.sd)
# стандартизация
# 1. центрация (centering)
x.centr <- (x-mean(x))
# 2. нормирование (scaling [by standard deviation])
x.norm <- x/x.sd
# z-значения
z.scores <- (x-mean(x))/x.sd
# Полная сводка
install.packages("psych"); library(psych)
# describeBy(x) если несколько
describe(x)
summary(x)
# Чтобы просмотреть все горячие клавиши, просто нажмите Alt+Shift+K в RStudio.
#Всякая ерунда
install.packages("smooth");  library(smooth)
install.packages("forecast"); library(forecast)
tsdisplay(x1$weight)
# временной ряд
x <- ts(x1$weight,start=c(1984,1),frequency=12)
#    1.1) Присоединим по еще 1 столбцу с названием дизайнера:
x1_A$disigner <- "A"
x1_B$disigner <- "B"
x1_C$disigner <- "C"
names(x1_A) <- c("procent","disigner")
names(x1_B) <- c("procent","disigner")
names(x1_C) <- c("procent","disigner")
# 3) Теперь создадим из них общую таблицу:
x1_ABC <- rbind(x1_A, x1_B, x1_C)
#    2.1.1) Подключим функцию для быстрого расчета статического вывода:
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
# Вопрос 1: Получены данные о производительности труда (в %)
#           работников, распределённых по рабочим местам с тремя
#           разными вариантами дизайна: A, B и C:
file <- "design_A.dat"; x1_A <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
file <- "design_B.dat"; x1_B <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
file <- "design_C.dat"; x1_C <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
# 1) Посмотрим данные:
head(x1_A); head(x1_B); head(x1_C)
str(x1_A); str(x1_B); str(x1_C); cat("\n\n")
#    1.1) Присоединим по еще 1 столбцу с названием дизайнера:
x1_A$disigner <- "A"
x1_B$disigner <- "B"
x1_C$disigner <- "C"
# 2) Переменовываю столбцы:
names(x1_A) <- c("procent","disigner")
names(x1_B) <- c("procent","disigner")
names(x1_C) <- c("procent","disigner")
# 3) Теперь создадим из них общую таблицу:
x1_ABC <- rbind(x1_A, x1_B, x1_C)
# 2) Задание:
#    2.1) По этим данным оцените:
#         ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#         • общую среднюю производительность труда;
#         • стандартную ошибку такого выборочного среднего SEM;
#         • насколько производительность труда связана с дизайном рабочего места
#         • укажите погрешность MOE выборочного среднего при CL = 90%;
#                                                        при 90% CI выборочного среднего;
#         • Оцените среднюю производительность труда на рабочих местах с каждым дизайном по отдельности;
#         • Вычислите 95% CI этих оценок для разного дизайна.
#    2.1.1) Подключим функцию для быстрого расчета статического вывода:
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
#    2.1.2) Используем функцию Static_output(x, CL_n, CL_n_group, p_SEp),
#           где CL_n - уровень доверия для основного расчета,
#               CL_n_group - для расчета по группам (если есть), изначально NULL и не считается.
#           Т.к. здесь выборочная доля не нужна, игнорируем p_Sep и вводим следующее:
Static_output(x1_ABC, 90, 95)
#           -/ПРИМЕЧАНИЕ/-
#           В функции все подробно расписано как и что считается.
#    2.1.3) "Насколько производительность труда связана с дизайном рабочего места".
#           Здесь подходит коэффициент внутригрупповой корреляции η2.
#           Для его подсчета используем функцию Anova.disp():
#           ИЗ ЭТОЙ ФУНКЦИИ НУЖЕН ТОЛЬКО η2
Anova.disp(x1_ABC)
# Вопрос 2:
# Воспользуемся дополнительным пакетом ggplot2, установив его в R с помощью команды install.packages("ggplot2").
#install.packages("ggplot2");
library(ggplot2)
# 1) Подготовим данные для диаграммы и добавим в неё столбцы со значениями средних выборочных и границ CI.
CI <- Static_output(x1_ABC, 90, 95); CI
#    Пояснение: 1 столбец - группа,
#               2 столбец - нижние границы CI,
#               3 столбец - средние,
#               4 столбец - верхние границы CI.
# 2) Теперь построим диаграмму точечных и интервальных оценок среднего по каждой выборке:
ggplot(CI) +
aes(x = CI[[1]], y = CI[[3]]) +
geom_point() +
geom_errorbar(aes(ymin = CI[[2]], ymax = CI[[4]]))
# 4) Теперь оформим нашу диаграмму как следует.
#    Для начала вернём привычный белый фон и размер шрифтов:
theme_set(theme_bw(base_size = 14))  # чёрно-белое оформление, базовый размер шрифта
theme_update(plot.title = element_text(face = 'bold', hjust = 0.5))  # жирный шрифт заголовка, выравнивание по центру
# 5) Сделаем диаграмму более выразительной, а также добавим подписи:
ggplot(CI) +
aes(x = CI[[1]], y = CI[[3]]) +
geom_errorbar(aes(ymin = CI[[2]], ymax = CI[[4]]),
width =  0.2, lwd = 1, col = "gray") +
geom_point(cex = 4, col = "blue") +
labs(title = "Диаграмма точечных и интервальных оценок средних
по данным производительности труда работников                     ",
x = 'рабочее место', y = 'производительность труда, %')
# Интепретация:
# 1) Стандартная ошибка доли SEM говорит о том, в пределах+-1.97 стандартной ошибки отклоняется от генерального среднего 2/3 выборочных средних
# 2) С помощью доверительного интервала CI определили диапазон от 57.9744 до 64.54551, в котором с CL= 90%-ой вероятностью заключено истинное среднее.
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
# Вопрос 1: Получены данные о производительности труда (в %)
#           работников, распределённых по рабочим местам с тремя
#           разными вариантами дизайна: A, B и C:
file <- "design_A.dat"; x1_A <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
file <- "design_B.dat"; x1_B <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
file <- "design_C.dat"; x1_C <- read.csv(paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/", file)); rm(file)
# 1) Посмотрим данные:
head(x1_A); head(x1_B); head(x1_C)
str(x1_A); str(x1_B); str(x1_C); cat("\n\n")
#    1.1) Присоединим по еще 1 столбцу с названием дизайнера:
x1_A$disigner <- "A"
x1_B$disigner <- "B"
x1_C$disigner <- "C"
# 2) Переменовываю столбцы:
names(x1_A) <- c("procent","disigner")
names(x1_B) <- c("procent","disigner")
names(x1_C) <- c("procent","disigner")
# 3) Теперь создадим из них общую таблицу:
x1_ABC <- rbind(x1_A, x1_B, x1_C)
# 2) Задание:
#    2.1) По этим данным оцените:
#         ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
#         • общую среднюю производительность труда;
#         • стандартную ошибку такого выборочного среднего SEM;
#         • насколько производительность труда связана с дизайном рабочего места
#         • укажите погрешность MOE выборочного среднего при CL = 90%;
#                                                        при 90% CI выборочного среднего;
#         • Оцените среднюю производительность труда на рабочих местах с каждым дизайном по отдельности;
#         • Вычислите 95% CI этих оценок для разного дизайна.
#    2.1.1) Подключим функцию для быстрого расчета статического вывода:
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
#    2.1.2) Используем функцию Static_output(x, CL_n, CL_n_group, p_SEp),
#           где CL_n - уровень доверия для основного расчета,
#               CL_n_group - для расчета по группам (если есть), изначально NULL и не считается.
#           Т.к. здесь выборочная доля не нужна, игнорируем p_Sep и вводим следующее:
Static_output(x1_ABC, 90, 95)
#           -/ПРИМЕЧАНИЕ/-
#           В функции все подробно расписано как и что считается.
#    2.1.3) "Насколько производительность труда связана с дизайном рабочего места".
#           Здесь подходит коэффициент внутригрупповой корреляции η2.
#           Для его подсчета используем функцию Anova.disp():
#           ИЗ ЭТОЙ ФУНКЦИИ НУЖЕН ТОЛЬКО η2
Anova.disp(x1_ABC)
# Вопрос 2:
# Воспользуемся дополнительным пакетом ggplot2, установив его в R с помощью команды install.packages("ggplot2").
#install.packages("ggplot2");
library(ggplot2)
# 1) Подготовим данные для диаграммы и добавим в неё столбцы со значениями средних выборочных и границ CI.
CI <- Static_output(x1_ABC, 90, 95); CI
#    Пояснение: 1 столбец - группа,
#               2 столбец - нижние границы CI,
#               3 столбец - средние,
#               4 столбец - верхние границы CI.
# 2) Теперь построим диаграмму точечных и интервальных оценок среднего по каждой выборке:
ggplot(CI) +
aes(x = CI[[1]], y = CI[[3]]) +
geom_point() +
geom_errorbar(aes(ymin = CI[[2]], ymax = CI[[4]]))
# 4) Теперь оформим нашу диаграмму как следует.
#    Для начала вернём привычный белый фон и размер шрифтов:
theme_set(theme_bw(base_size = 14))  # чёрно-белое оформление, базовый размер шрифта
theme_update(plot.title = element_text(face = 'bold', hjust = 0.5))  # жирный шрифт заголовка, выравнивание по центру
# 5) Сделаем диаграмму более выразительной, а также добавим подписи:
ggplot(CI) +
aes(x = CI[[1]], y = CI[[3]]) +
geom_errorbar(aes(ymin = CI[[2]], ymax = CI[[4]]),
width =  0.2, lwd = 1, col = "gray") +
geom_point(cex = 4, col = "blue") +
labs(title = "Диаграмма точечных и интервальных оценок средних
по данным производительности труда работников                     ",
x = 'рабочее место', y = 'производительность труда, %')
# Интепретация:
# 1) Стандартная ошибка доли SEM говорит о том, в пределах+-1.97 стандартной ошибки отклоняется от генерального среднего 2/3 выборочных средних
# 2) С помощью доверительного интервала CI определили диапазон от 57.9744 до 64.54551, в котором с CL= 90%-ой вероятностью заключено истинное среднее.
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
catalog <- gsub( basename(dirname(rstudioapi::getSourceEditorContext()$path)), '', paste0(dirname(rstudioapi::getSourceEditorContext()$path)))
file <- "Функции для R/R_test_func2.R"
# Открываю библиотеку с пользовательскими функциями
source(paste0(catalog, file));
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R")
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R")
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R")
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'Windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'цindows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251',  absolute = TRUE)
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.r", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12 Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12 Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12 Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'UTF-8')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
source("C:/Users/ak179/OneDrive/Магистратура/2 КУРС/1 СЕМЕСТР/Лекции (2 курс)/Язык R (шпоры и задачи)/Скрипты/Самостоятельные задания/Задание 12, Интервальное оценивание/Вопрос 1-2 (12) функции распределения вероятностей t.R", encoding = 'windows-1251')
